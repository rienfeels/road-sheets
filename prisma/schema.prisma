// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  DRIVER
}

enum SheetStatus {
  DRAFT
  SUBMITTED
  APPROVED
}

model User {
  id        String      @id @default(cuid())
  name      String
  email     String      @unique
  password  String
  role      Role        @default(DRIVER)
  sheets    Sheet[]     @relation("UserSheets")
  events    SheetEvent[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Location {
  id        String   @id @default(cuid())
  name      String
  address   String?
  city      String?
  state     String?
  zip       String?
  lat       Float?
  lng       Float?
  jobs      Job[]
}

model Job {
  id          String    @id @default(cuid())
  name        String
  client      String?
  locationId  String?
  location    Location? @relation(fields: [locationId], references: [id])
  sheets      Sheet[]
}

model Vehicle {
  id     String  @id @default(cuid())
  label  String
  plate  String?
  sheets Sheet[]
}

model Sheet {
  id         String      @id @default(cuid())
  date       DateTime
  driverId   String
  driver     User        @relation("UserSheets", fields: [driverId], references: [id])
  jobId      String?
  job        Job?        @relation(fields: [jobId], references: [id])
  vehicleId  String?
  vehicle    Vehicle?    @relation(fields: [vehicleId], references: [id])
  startTime  DateTime?
  endTime    DateTime?
  miles      Int?
  materials  Json?
  notes      String?
  status     SheetStatus @default(DRAFT)
  events     SheetEvent[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@index([date, driverId, jobId, vehicleId, status])
}

model SheetEvent {
  id        String   @id @default(cuid())
  sheetId   String
  sheet     Sheet    @relation(fields: [sheetId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  type      String   // CREATE | UPDATE | DELETE | STATUS_CHANGE
  payload   Json?
  createdAt DateTime @default(now())
}

model Message {
  id         String   @id @default(cuid())
  title      String
  body       String
  audience   String   @default("ALL") // "ALL" | "DRIVER" | "ADMIN" (extend later)
  published  Boolean  @default(true)
  createdAt  DateTime @default(now())
}
